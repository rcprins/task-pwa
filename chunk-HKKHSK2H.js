import{Ba as H,C as M,D as A,E as V,Eb as Q,I as $,K as F,O as G,Ob as W,P as X,Q as I,R as O,S as T,V as Y,e as j,g as f,l as m,la as z,m as C,n as R,r as K,vb as J}from"./chunk-5ACEPQNJ.js";var Z=class{constructor(i,e){this.dbService=i;this.local_db_table_name=e;window.addEventListener("online",()=>{console.log("Syncing after getting online again '"+navigator.onLine+"'"),this.syncAll()})}getByIdLocal(i){return C(this.dbService.getByID(this.local_db_table_name,i))}getById(i){return this.getByIdLocal(i).pipe(M(void 0),$(e=>{debugger;if(e!==void 0){debugger;return R(e)}else{debugger;return this.getByIdRemote(i).pipe(F(t=>this.add(t)))}}))}add(i){i.synced=!1;let e=this.dbService.add(this.local_db_table_name,i);return this.sync(i),e}update(i){console.log("Updating local entity with id:'"+i.id+"' in local store"),i.synced=!1;let e=this.dbService.update(this.local_db_table_name,i);return e.subscribe(t=>{this.sync(t)}),e}deleteTask(i){if(!i.id)throw Error("Cannot delete task as it has has no id");return this.dbService.delete(this.local_db_table_name,i.id)}getAllLocal(){return this.dbService.getAll(this.local_db_table_name)}getAll(){return navigator.onLine?this.getAllRemote():this.getAllLocal()}syncAll(){navigator.onLine&&this.getAllLocal().subscribe(i=>{let e=i.filter(t=>!t.synced);for(let t of e)this.sync(t)})}sync(i){if(navigator.onLine){if(console.log("Local entity synced: '"+i.id+"'"),i.synced)return;this.backendSync(i).then(()=>{console.log("Updating sync status of local entity: '"+i.id+"'"),i.synced=!0,console.log("Updating sync status of local entity: '"+i.id+"' '"+i.synced+"'"),this.dbService.update(this.local_db_table_name,i).subscribe({next:()=>console.log("Updated!"),error:e=>console.error("Update error",e)})})}}backendSync(i){return new Promise(e=>{setTimeout(()=>{console.log("Syncing local entity with id:'"+i.id+"' to backend"+i),this.updateInBackend(i),e()},1e3)})}};var x=function(o){return o.readonly="readonly",o.readwrite="readwrite",o}(x||{}),N=new I(null),ee=new I("Indexed DB"),oe=new I("Server Indexed DB");function se(o,i){return o.objectStoreNames.contains(i)}function w(o,i,e){if(!o){e("You need to use the openDatabase function to create a database before you query it!");return}se(o,i)||e(`objectStore does not exists: ${i}`)}function v(o,i){let e=o.transaction(i.storeName,i.dbMode);return e.onerror=i.error,e.onabort=i.abort,e}function D(o,i,e,t){return{storeName:i,dbMode:o,error:r=>{e(r)},abort:r=>{e(r)}}}var q=[];function y(o,i,e,t){return new Promise((r,n)=>{o||n("IndexedDB not available");let s=o.open(i,e),a;s.onsuccess=()=>{a=s.result,q.push(a),r(a)},s.onerror=()=>{n(`IndexedDB error: ${s.error}`)},typeof t=="function"&&(s.onupgradeneeded=c=>{t(c,a)})})}function _(o,i,e,t,r){return j(this,null,function*(){return new Promise((n,s)=>{if(!o)return;let a=o.open(i,e);a.onupgradeneeded=c=>j(this,null,function*(){let d=c.target.result,p=t.map(h=>j(this,null,function*(){if(!d.objectStoreNames.contains(h.store)){let u=d.createObjectStore(h.store,h.storeConfig);for(let g of h.storeSchema)u.createIndex(g.name,g.keypath,g.options)}}));yield Promise.all(p);let l=r&&r();if(l){let h=Object.keys(l).map(u=>parseInt(u,10)).filter(u=>u>c.oldVersion).sort((u,g)=>u-g);for(let u of h)l[u](d,a.transaction)}d.close(),n()}),a.onsuccess=c=>{c.target.result.close(),n()},a.onerror=c=>{s(c)}})})}function ie(o,i,e){if(!o||!i||!e)throw Error('Params: "dbName", "version", "storeName" are mandatory.');return new f(t=>{try{let r=i+1,n=indexedDB.open(o,r);n.onupgradeneeded=s=>{let a=s.target.result;a.deleteObjectStore(e),a.close(),console.log("onupgradeneeded"),t.next(),t.complete()},n.onerror=s=>t.error(s)}catch(r){t.error(r)}})}function ce(o){return new Promise((i,e)=>{if(!o){e(new Error("No database to close"));return}try{o.close(),i()}catch(t){e(`Error closing database: ${t}`)}})}function b(){return function(o,i,e){let t=e.value;return e.value=function(...r){let n=t.apply(this,r);return n instanceof f?n.pipe(V(()=>j(this,null,function*(){let s=q.map(a=>j(this,null,function*(){yield ce(a)}));yield Promise.all(s),q.length=0}))):n},e}}var ae=(()=>{class o{constructor(e,t){this.dbConfigs=e,this.indexedDB=t,this.defaultDatabaseName=null,Object.values(this.dbConfigs).forEach((r,n,s)=>this.instanciateConfig(r,s.length===1))}instanciateConfig(e,t){return j(this,null,function*(){if(!e.name)throw new Error("NgxIndexedDB: Please, provide the dbName in the configuration");if((e.isDefault??!1)&&this.defaultDatabaseName)throw new Error("NgxIndexedDB: Only one database can be set as default");((e.isDefault??!1)&&!this.defaultDatabaseName||t)&&(this.defaultDatabaseName=e.name,this.selectedDb=e.name),yield _(this.indexedDB,e.name,e.version,e.objectStoresMeta,e.migrationFactory),y(this.indexedDB,e.name).then(r=>{r.version!==e.version&&(J()&&(console.warn(`
            Your DB Config doesn't match the most recent version of the DB with name ${e.name}, please update it
            DB current version: ${r.version};
            Your configuration: ${e.version};
            `),console.warn(`Using latest version ${r.version}`)),this.dbConfigs[e.name].version=r.version),r.close()})})}get dbConfig(){return this.dbConfigs[this.selectedDb]}getDatabaseVersion(){return new f(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{e.next(t.version),e.complete()}).catch(t=>e.error(`error during get version of database => ${t} `))})}selectDb(e){if(e=e??this.defaultDatabaseName,!e)throw new Error("No database name specified and no default database set.");if(!Object.keys(this.dbConfigs).includes(e))throw new Error(`NgxIndexedDB: Database ${e} is not initialized.`);this.selectedDb=e}createObjectStore(e,t){return j(this,null,function*(){let r=[e];yield _(this.indexedDB,this.dbConfig.name,++this.dbConfig.version,r,t)})}createDynamicObjectStore(e,t){return j(this,null,function*(){let r=[e];yield _(this.indexedDB,this.dbConfig.name,this.dbConfig.version,r,t)})}add(e,t,r){return new f(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{let c=v(s,D(x.readwrite,e,l=>n.error(l))).objectStore(e),p=!!r?c.add(t,r):c.add(t);p.onsuccess=l=>j(this,null,function*(){let h=l.target.result,u=c.get(h);u.onsuccess=g=>{n.next(g.target.result),n.complete()},u.onerror=g=>{n.error(g)}}),p.onerror=l=>{n.error(l)}}).catch(s=>n.error(s))})}bulkAdd(e,t){let r=new Promise((n,s)=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(a=>{let d=v(a,D(x.readwrite,e,n,s)).objectStore(e),p=t.map(l=>new Promise(h=>{let u=l.key;delete l.key;let B=!!u?d.add(l,u):d.add(l);B.onsuccess=k=>{let ne=k.target.result;h(ne)}}));n(Promise.all(p))}).catch(a=>s(a))});return C(r)}bulkDelete(e,t){let r=t.map(n=>new Promise((s,a)=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{let d=v(c,D(x.readwrite,e,a,s));d.objectStore(e).delete(n),d.oncomplete=()=>{this.getAll(e).pipe(A(1)).subscribe(l=>{s(l)})}}).catch(c=>a(c))}));return C(Promise.all(r))}getByKey(e,t){return new f(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{let c=v(n,D(x.readonly,e,r.error)).objectStore(e).get(t);c.onsuccess=d=>{r.next(d.target.result),r.complete()},c.onerror=d=>{r.error(d)}}).catch(n=>r.error(n))})}bulkGet(e,t){let r=t.map(n=>this.getByKey(e,n));return new f(n=>{K(r).subscribe(s=>{n.next(s),n.complete()})})}getByID(e,t){return new f(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,d=>r.error(d));let c=v(n,D(x.readonly,e,r.error,r.next)).objectStore(e).get(t);c.onsuccess=d=>{r.next(d.target.result)}}).catch(n=>r.error(n))})}getByIndex(e,t,r){return new f(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{w(s,e,l=>n.error(l));let p=v(s,D(x.readonly,e,n.error)).objectStore(e).index(t).get(r);p.onsuccess=l=>{n.next(l.target.result),n.complete()}}).catch(s=>n.error(s))})}getAll(e){return new f(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{w(r,e,c=>t.error(c));let a=v(r,D(x.readonly,e,t.error,t.next)).objectStore(e).getAll();a.onerror=c=>{t.error(c)},a.onsuccess=({target:{result:c}})=>{t.next(c),t.complete()}}).catch(r=>t.error(r))})}update(e,t){return new f(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,d=>r.error(d));let a=v(n,D(x.readwrite,e,d=>r.error(d))).objectStore(e),c=a.put(t);c.onsuccess=d=>j(this,null,function*(){let p=d.target.result,l=a.get(p);l.onsuccess=h=>{r.next(h.target.result),r.complete()}})}).catch(n=>r.error(n))})}bulkPut(e,t){let r;return new f(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{w(s,e,c=>n.error(c)),r=v(s,D(x.readwrite,e,c=>n.error(c)));let a=r.objectStore(e);t.forEach((c,d)=>{let p=a.put(c);d===t.length-1&&(p.onsuccess=l=>{r.commit(),n.next(l.target.result),n.complete()}),p.onerror=l=>{r.abort(),n.error(l)}})}).catch(s=>{r?.abort(),n.error(s)})})}delete(e,t){return new f(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,c=>r.error(c));let s=v(n,D(x.readwrite,e,c=>r.error(c)));s.objectStore(e).delete(t),s.onerror=c=>r.error(c),s.oncomplete=()=>{this.getAll(e).pipe(A(1)).subscribe({next:c=>{r.next(c)},error:c=>r.error(c),complete:()=>r.complete()})}}).catch(n=>r.error(n))})}deleteByKey(e,t){return new f(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,c=>r.error(c));let s=v(n,D(x.readwrite,e,c=>r.error(c)));s.objectStore(e).delete(t),s.onerror=c=>r.error(c),s.oncomplete=()=>{r.next(),r.complete()}}).catch(n=>r.error(n))})}deleteAllByIndex(e,t,r,n){return new f(s=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(a=>{w(a,e,h=>s.error(h));let l=v(a,D(x.readwrite,e,s.error)).objectStore(e).index(t).openCursor(r,n);l.onerror=h=>s.error(h),l.onsuccess=h=>{let u=h.target.result;u?(u.delete(),u.continue()):(s.next(),s.complete())}}).catch(a=>s.error(a))})}clear(e){return new f(t=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(r=>{w(r,e,a=>t.error(a));let n=v(r,D(x.readwrite,e,a=>t.error(a)));n.objectStore(e).clear(),n.onerror=a=>t.error(a),n.oncomplete=()=>{t.next(),t.complete()}}).catch(r=>t.error(r))})}deleteDatabase(){return new f(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>j(this,null,function*(){t.close();let r=this.indexedDB.deleteDatabase(this.dbConfig.name);r.onsuccess=()=>{e.next(),e.complete()},r.onerror=n=>e.error(n),r.onblocked=()=>{console.warn("Delete blocked: Ensure all tabs, instances, or connections are closed. Database name:",this.dbConfig.name),e.error(new Error("Unable to delete database because it's blocked"))}})).catch(t=>e.error(t))})}openCursor(e){let{storeName:t,query:r,direction:n,mode:s=x.readonly}=e;return new f(a=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(c=>{w(c,t,h=>a.error(h));let d=v(c,D(s,t,a.error)),l=d.objectStore(t).openCursor(r,n);d.oncomplete=()=>a.complete(),l.onerror=h=>a.error(h),l.onsuccess=h=>{let u=h.target.result;u&&a.next(u)}}).catch(c=>a.error(c))})}openCursorByIndex(e){let{storeName:t,indexName:r,query:n,direction:s,mode:a=x.readonly}=e;return new f(c=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(d=>{w(d,t,g=>c.error(g));let p=v(d,D(a,t,c.error)),u=p.objectStore(t).index(r).openCursor(n,s);p.oncomplete=()=>c.complete(),u.onerror=g=>c.error(g),u.onsuccess=g=>{let B=g.target.result;B&&c.next(B)}}).catch(d=>c.error(d))})}getAllByIndex(e,t,r,n){return new f(s=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(a=>{w(a,e,u=>s.error(u));let l=v(a,D(x.readonly,e,s.error)).objectStore(e).index(t).openCursor(r,n),h=[];l.onerror=u=>s.error(u),l.onsuccess=u=>{let g=u.target.result;g?(h.push(g.value),g.continue()):(s.next(h),s.complete())}}).catch(a=>s.error(a))})}getAllKeysByIndex(e,t,r,n){return new f(s=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(a=>{w(a,e,u=>s.error(u));let p=v(a,D(x.readonly,e,s.error)).objectStore(e).index(t),l=[],h=p.openKeyCursor(r,n);h.onerror=u=>s.error(u),h.onsuccess=u=>{let g=u.target.result;if(g){let{primaryKey:B,key:k}=g;l.push({primaryKey:B,key:k}),g.continue()}else s.next(l),s.complete()}}).catch(a=>s.error(a))})}count(e,t){return new f(r=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(n=>{w(n,e,d=>r.error(d));let c=v(n,D(x.readonly,e,r.error)).objectStore(e).count(t);c.onerror=d=>r.error(d),c.onsuccess=d=>{r.next(d.target.result),r.complete()}}).catch(n=>r.error(n))})}countByIndex(e,t,r){return new f(n=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(s=>{w(s,e,l=>n.error(l));let p=v(s,D(x.readonly,e,n.error)).objectStore(e).index(t).count(r);p.onerror=l=>n.error(l),p.onsuccess=l=>{n.next(l.target.result),n.complete()}}).catch(s=>n.error(s))})}deleteObjectStore(e){return ie(this.dbConfig.name,++this.dbConfig.version,e)}getAllObjectStoreNames(){return new f(e=>{y(this.indexedDB,this.dbConfig.name,this.dbConfig.version).then(t=>{e.next(Array.from(t.objectStoreNames)),e.complete()}).catch(t=>e.error(t))})}static{this.\u0275fac=function(t){return new(t||o)(O(N),O(ee))}}static{this.\u0275prov=G({token:o,factory:o.\u0275fac})}}return m([b()],o.prototype,"getDatabaseVersion",null),m([b()],o.prototype,"add",null),m([b()],o.prototype,"bulkAdd",null),m([b()],o.prototype,"bulkDelete",null),m([b()],o.prototype,"getByKey",null),m([b()],o.prototype,"bulkGet",null),m([b()],o.prototype,"getByID",null),m([b()],o.prototype,"getByIndex",null),m([b()],o.prototype,"getAll",null),m([b()],o.prototype,"update",null),m([b()],o.prototype,"bulkPut",null),m([b()],o.prototype,"delete",null),m([b()],o.prototype,"deleteByKey",null),m([b()],o.prototype,"deleteAllByIndex",null),m([b()],o.prototype,"clear",null),m([b()],o.prototype,"deleteDatabase",null),m([b()],o.prototype,"openCursor",null),m([b()],o.prototype,"openCursorByIndex",null),m([b()],o.prototype,"getAllByIndex",null),m([b()],o.prototype,"getAllKeysByIndex",null),m([b()],o.prototype,"count",null),m([b()],o.prototype,"countByIndex",null),m([b()],o.prototype,"getAllObjectStoreNames",null),o})(),U=class{cmp(){return 0}databases(){return Promise.resolve([])}deleteDatabase(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}open(){return{onupgradeneeded:null,onblocked:null,onerror:null,onsuccess:null,error:null}}};function te(){Y(te);let o=T(z),i=T(oe,{optional:!0})??new U;return W(o)?T(Q).defaultView.indexedDB:i}var de=(...o)=>{let i=o.reduce((e,t)=>(e[t.name]=t,e),{});return[ae,{provide:N,useValue:i},{provide:ee,useFactory:te}]},Ie=(()=>{class o{static forRoot(...e){return{ngModule:o,providers:[...de(...e)]}}static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275mod=H({type:o})}static{this.\u0275inj=X({})}}return o})();var le=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),P={randomUUID:le};var E,ue=new Uint8Array(16);function L(){if(!E){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");E=crypto.getRandomValues.bind(crypto)}return E(ue)}var S=[];for(let o=0;o<256;++o)S.push((o+256).toString(16).slice(1));function re(o,i=0){return(S[o[i+0]]+S[o[i+1]]+S[o[i+2]]+S[o[i+3]]+"-"+S[o[i+4]]+S[o[i+5]]+"-"+S[o[i+6]]+S[o[i+7]]+"-"+S[o[i+8]]+S[o[i+9]]+"-"+S[o[i+10]]+S[o[i+11]]+S[o[i+12]]+S[o[i+13]]+S[o[i+14]]+S[o[i+15]]).toLowerCase()}function he(o,i,e){if(P.randomUUID&&!i&&!o)return P.randomUUID();o=o||{};let t=o.random??o.rng?.()??L();if(t.length<16)throw new Error("Random bytes length must be >= 16");if(t[6]=t[6]&15|64,t[8]=t[8]&63|128,i){if(e=e||0,e<0||e+16>i.length)throw new RangeError(`UUID byte range ${e}:${e+15} is out of buffer bounds`);for(let r=0;r<16;++r)i[e+r]=t[r];return i}return re(t)}var pe=he;export{Z as a,ae as b,Ie as c,pe as d};
